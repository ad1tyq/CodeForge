// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL") // uses a direct connection
}

model User {
  id        String       @id @default(cuid())
  email     String       @unique
  name      String? // Optional, can be pulled from the auth provider
  xp        Int          @default(0) // Experience points for gamification
  createdAt DateTime     @default(now())

  // A flexible way to store which concepts a user has mastered
  conceptsMastered Json @default("{}") 
  // Example: { "loops": true, "functions": true }

  submissions Submission[]
}

model Challenge {
  id          String   @id @default(cuid())
  title       String
  description String
  difficulty  String   // "Easy", "Medium", or "Hard"
  concept     String   // "if-else", "loops", or "functions"
  starterCode String   // Boilerplate code for the user
  // Storing test cases as a JSON object is very flexible
  testCases   Json
  // Example: { "inputs": [[1, 2], [5, 5]], "outputs": [3, 10] }
  submissions Submission[]
}

model Submission {
  id          String    @id @default(cuid())
  userId      String
  challengeId String
  code        String    // The code the user submitted
  passed      Boolean   // Did it pass all test cases?
  submittedAt DateTime  @default(now())
  // --- Relations ---
  user      User      @relation(fields: [userId], references: [id])
  challenge Challenge @relation(fields: [challengeId], references: [id])
}